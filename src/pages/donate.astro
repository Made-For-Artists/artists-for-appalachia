---
import CollectionSection from '~/features/collection/CollectionSection.astro';
import LandingHero from '~/components/LandingHero.astro';
import { applyDefaultCacheHeaders } from '~/config.ts';
import PrimaryLayout from '~/layouts/PrimaryLayout.astro';
import { Textfield } from '~/components/ui/Textfield/Textfield.tsx';
import { PriceTextfield } from '~/components/ui/PriceTextfield/PriceTextfield.tsx';
import { ImageUploader } from '~/components/ImageUploader/ImageUploader.tsx';
import { button } from '~/styles.ts';

applyDefaultCacheHeaders(Astro.response.headers);
---

<PrimaryLayout title="Giving Arts - for Appalachia">
	<LandingHero hideCTA />
	<main class="breakout mt-16 flex flex-col gap-y-16">
		<div class="content">
			<div class="prose m-auto">
				<h1>Art submission form</h1>
				<p class="prose-base m-auto mb-10 md:prose-lg lg:prose-xl">
					Here you can provide details and images of the artwork you wish to offer. Indicate the
					suggested donation amount based on the artwork's value.
				</p>

				<form class="flex flex-col gap-6" action="">
					<h4 class="mb-0">Contact information</h4>
					<Textfield name="name" label="Name" />
					<Textfield name="email" label="Email" type="email" />
					<Textfield name="phone" label="Phone number" type="tel" />

					<h4 class="mb-0">Artwork details</h4>
					<ImageUploader client:only label="Artwork images" name="images" />
					<Textfield name="title" label="Artwork title" />
					<PriceTextfield client:only label="Suggested donation" />
					<Textfield name="medium" label="Medium" />
					<Textfield name="dimensions" label="Dimensions" />
					<Textfield textarea name="description" label="Description" />

					<button type="submit" class={button({ theme: 'dark', className: 'font-bold' })}>
						Submit art
					</button>
				</form>
			</div>
		</div>

		<CollectionSection />
	</main>
</PrimaryLayout>

<script>
	import { actions, isInputError } from 'astro:actions';
	import { navigate } from 'astro:transitions/client';

	const form = document.querySelector('form');
	form?.addEventListener('submit', async (event) => {
		event.preventDefault();
		const formData = new FormData(form);
		const { error } = await actions.artwork.submitArtwork(formData);
		if (isInputError(error)) {
			// Handle input errors.
			if (error.fields.email) {
				const message = error.fields.email.join(', ');
			}
		}
		if (!error) navigate('/confirmation');
	});
</script>
